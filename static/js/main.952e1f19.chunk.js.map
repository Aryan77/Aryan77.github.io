{"version":3,"sources":["contexts/theme.js","portfolio.js","components/About/About.js","components/ProjectContainer/ProjectContainer.js","components/Projects/Projects.js","components/Experience/Experience.js","components/Skills/Skills.js","components/Current/Current.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","themeName","setThemeName","useEffect","localStorage","getItem","Provider","value","toggleTheme","name","setItem","about","role","resume","social","linkedin","github","projects","description","stack","sourceCode","livePreview","experiences","skills","About","className","href","ProjectContainer","project","map","item","uniqid","Projects","length","id","Experience","Skills","skill","Current","App","useContext","state","setState","onClick","render","document","getElementById"],"mappings":"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","file":"static/js/main.952e1f19.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst ThemeContext = createContext()\n\nconst ThemeProvider = ({ children }) => {\n  const [themeName, setThemeName] = useState('light')\n\n  useEffect(() => {\n    const isDark = localStorage.getItem('themeName') === 'dark'\n    if (isDark) setThemeName('dark')\n  }, [])\n\n  const toggleTheme = () => {\n    const name = themeName === 'dark' ? 'light' : 'dark'\n    localStorage.setItem('themeName', name)\n    setThemeName(name)\n  }\n\n  return (\n    <ThemeContext.Provider value={[{ themeName, toggleTheme }]}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport { ThemeProvider, ThemeContext }\n","const header = {\n  homepage: 'https://Aryan77.github.io/',\n}\n\nconst about = {\n  name: 'Aryan Yadav',\n  role: '',\n  resume:\n    'https://drive.google.com/file/d/1c2UUGPv3Eu29QMpbA556sf-0MBpkYjs1/view?usp=sharing',\n  social: {\n    linkedin: 'https://www.linkedin.com/in/aryan-yadav-2b95801b5/',\n    github: 'https://github.com/Aryan77',\n  },\n}\n\nconst projects = [\n  {\n    name: 'OCaml Data Science Library',\n    description:\n      'A data science + machine learning library for OCaml that replicates and combines the most commonly used functionality of three famous Python libraries - Numpy, Pandas, Sklearn. Integrates well with the Archimedes library for graphing, and can thus be used for every step of a regular machine learning workflow.',\n    stack: ['OCaml', 'Jupyter Notebooks'],\n    sourceCode: 'https://github.com/Aryan77/ocaml-data-science-ml',\n  },\n  {\n    name: 'MapReduce',\n    description: `A C++ implementation of Google's infamous MapReduce paper from scratch. My specific implementation presents the most frequent n-grams from a massive amount of text files, processing them in parallel; but the code can be used for any use case that involves processing an enormous amount of data concurrently and as quickly as possible.`,\n    stack: ['C++', 'Bash'],\n    sourceCode: 'https://github.com/Aryan77/MapReduce',\n  },\n  {\n    name: 'CoursePlan',\n    description:\n      'A web app that lets Cornell students check what requirements they have satisfied to the completion of their degree and plan future semesters. Currently working on getting high school requirements correctly transferred across multiple colleges and majors, as part of the Cornell DTI project team.',\n    stack: ['TypeScript', 'Vue', 'Firebase', ''],\n    sourceCode: 'https://github.com/cornell-dti/course-plan',\n    livePreview: 'https://courseplan.io/',\n  },\n  {\n    name: 'CritterWorld',\n    description:\n      'Large Java project (~14000 lines) for honors OOP class where I built a system that simulated a world of critters that wander around, eat food, reproduce and evolve. Involved writing a parser and interpreter for a DSL that would describe evolution, coupled with a GUI simulation.',\n    stack: ['Java', 'JavaFX'],\n  },\n]\n\nconst experiences = [\n  {\n    name: 'OCaml Data Science Library',\n    description:\n      'A data science + machine learning library for OCaml that replicates and combines the most commonly used functionality of three famous Python libraries - Numpy, Pandas, Sklearn. Integrates well with the Archimedes library for graphing, and can thus be used for every step of a regular machine learning workflow.',\n    stack: ['OCaml', 'Jupyter Notebooks'],\n    sourceCode: 'https://github.com/Aryan77/ocaml-data-science-ml',\n  },\n  {\n    name: 'CoursePlan',\n    description:\n      'A web app that lets Cornell students check what requirements they have satisfied to the completion of their degree and plan future semesters. Currently working on getting high school requirements correctly transferred across multiple colleges and majors, as part of the Cornell DTI project team.',\n    stack: ['TypeScript', 'Vue', 'Firebase', ''],\n    sourceCode: 'https://github.com/cornell-dti/course-plan',\n    livePreview: 'https://courseplan.io/',\n  },\n]\n\nconst skills = [\n  'TypeScript',\n  'JavaScript',\n  'Node.js',\n  'Express.js',\n  'Firebase',\n  'React.js',\n  'Vue.js',\n  'Python',\n  'Java',\n  'C++',\n  'OCaml',\n  'Numpy',\n  'Pandas',\n  'Sklearn',\n  'Docker',\n]\n\nconst contact = {\n  email: 'ay394@cornell.edu',\n}\n\nexport { header, about, projects, experiences, skills, contact }\n","import GitHubIcon from '@material-ui/icons/GitHub'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\nimport { about } from '../../portfolio'\nimport './About.css'\n\nconst About = () => {\n  const { name, role, description, resume, social } = about\n\n  return (\n    <div className='grid-container'>\n      <div className='grid-child details'>\n        {name && (\n          <h1>\n            <span className='about__name'>{name}</span>\n          </h1>\n        )}\n        <br />\n        <br />\n\n        {role && <h2 className='about__role'>{role}</h2>}\n        <p className='about__desc'>\n          &#128075; I&apos;m Aryan, a sophomore CS student at Cornell\n          University.\n          <br /> <br />\n          I enjoy building web applications, on all levels of the tech stack. I\n          also dabble in machine learning and systems programming.\n          <br /> <br />\n          <b>\n            {' '}\n            I am currently looking for software engineering internships for\n            Summer 2022.{' '}\n          </b>{' '}\n          <br /> <br />\n        </p>\n      </div>\n\n      <div className='grid-child links'>\n        <br />\n        <a href={resume} className='link link--nav'>\n          Resume\n        </a>\n        <br />\n\n        <a href={social.github} className='link link--nav'>\n          Github\n        </a>\n        <br />\n\n        <a href={social.linkedin} className='link link--nav'>\n          LinkedIn\n        </a>\n        <br />\n\n        <a href='mailto:ay394@cornell.edu' className='link link--nav'>\n          Email\n        </a>\n        <br />\n      </div>\n    </div>\n  )\n}\n\nexport default About\n","import uniqid from 'uniqid'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport LaunchIcon from '@material-ui/icons/Launch'\nimport './ProjectContainer.css'\n\nconst ProjectContainer = ({ project }) => (\n  <div className='project'>\n    <h3 className='project__title'>{project.name}</h3>\n\n    <p className='project__description'>{project.description}</p>\n    {project.stack && (\n      <ul className='project__stack'>\n        {project.stack.map((item) => (\n          <li key={uniqid()} className='project__stack-item'>\n            {item}\n          </li>\n        ))}\n      </ul>\n    )}\n\n    {project.sourceCode && (\n      <a href={project.sourceCode} className='link link--nav'>\n        Github\n      </a>\n    )}\n    {'              '}\n\n    {project.livePreview && (\n      <a href={project.livePreview} className='link link--nav'>\n        Demo\n      </a>\n    )}\n  </div>\n)\n\nexport default ProjectContainer\n","import uniqid from 'uniqid'\nimport { projects } from '../../portfolio'\nimport ProjectContainer from '../ProjectContainer/ProjectContainer'\nimport './Projects.css'\n\nconst Projects = () => {\n  if (!projects.length) return null\n\n  return (\n    <section id='projects' className='section projects'>\n      <div className='projects__grid'>\n        {projects.map((project) => (\n          <ProjectContainer key={uniqid()} project={project} />\n        ))}\n      </div>\n    </section>\n  )\n}\n\nexport default Projects\n","import uniqid from 'uniqid'\nimport { experiences } from '../../portfolio'\nimport './Experience.css'\n\nconst Experience = () => {\n  if (!experiences.length) return null\n\n  return (\n    <div className='history-tl-container'>\n      <br />\n      <br />\n\n      <ul className='tl'>\n        <li className='tl-item'>\n          <div className='item-title'>\n            Feb 2022 - Present &gt;{'  '}\n            <a\n              href='https://unipantry-site.webflow.io/'\n              className='link link--nav'\n            >\n              UniPantry\n            </a>\n          </div>\n\n          <div className='item-detail'>\n            <b>\n              FullStack Dev Intern <br />\n              Ithaca, New York\n            </b>\n            <br />\n            <br />- Working on an internal tool to automate the process of\n            migrating the large amount of video data we store locally to Google\n            Cloud Storage.\n            <br />- Implementing major refactoring of our FireStore database to\n            reduce latency by refactoring documents with monotonically\n            increasing IDs, limiting individual and global client write rates,\n            and using async calls whenever possible.\n          </div>\n        </li>\n\n        <li className='tl-item'>\n          <div className='item-title'>\n            Dec 2021 - Feb 2022 &gt;{'  '}\n            <a href='https://www.cornelldti.org/' className='link link--nav'>\n              AI Learners\n            </a>\n          </div>\n\n          <div className='item-detail'>\n            <b>\n              Frontend Dev Intern <br />\n              Ithaca, New York\n            </b>\n            <br />\n            <br />\n            Worked on a major refactoring of the game engine, so instead of\n            coding games manually, the engine would generate them automatically\n            by parsing the internal representation of game data.\n          </div>\n        </li>\n\n        <li className='tl-item'>\n          {/*\n            <div className='timestamp'>\n              <b>Present</b>\n              <br />\n              <b>Oct 2021</b>\n            </div>\n            */}\n\n          <div className='item-title'>\n            Sep 2021 - Feb 2022 &gt;{'  '}\n            <a href='https://www.cornelldti.org/' className='link link--nav'>\n              Cornell DTI\n            </a>\n          </div>\n\n          <div className='item-detail'>\n            <b>\n              FullStack Dev <br /> Ithaca, New York\n            </b>\n            <br />\n            <br />\n            Working on{' '}\n            <a href='https://courseplan.io/' className='link link--nav'>\n              CoursePlan\n            </a>\n            , specifically on a new feature that would provide students a\n            suggested template for a 4-year completion of their major and plan\n            classes accordingly.\n          </div>\n        </li>\n        <li className='tl-item'>\n          <div className='item-title'>\n            Aug 2020 - Aug 2021 &gt;{'  '}\n            <a href='https://www.f1soft.com/' className='link link--nav'>\n              F1Soft International\n            </a>\n          </div>\n\n          <div className='item-detail'>\n            <b>\n              FullStack Dev\n              <br /> Kathmandu, Nepal\n            </b>\n            <br />\n            <br />- Worked on the web version of{' '}\n            <a href='https://www.esewa.com.np/' className='link link--nav'>\n              esewa.com\n            </a>\n            , the largest online payment service in Nepal with more than 10\n            million users; I was part of the team that integrated payment\n            services of other companies into our app. <br />\n            - Improved user performance significantly by implementing a robust\n            system of caching and prefetching most commonly used services.\n            <br />\n            <br />\n            My mentor was kind enough to write me an{' '}\n            <a\n              href='https://www.linkedin.com/in/aryan-yadav-2b95801b5/'\n              className='link link--nav'\n            >\n              excellent recommendation on my LinkedIn page\n            </a>\n            .\n            <br />\n          </div>\n        </li>\n        <li className='tl-item'>\n          <div className='item-title'>\n            Jun 2020 - Aug 2020 &gt;{'  '}\n            <a href='https://www.f1soft.com/' className='link link--nav'>\n              F1Soft International\n            </a>\n          </div>\n          <div className='item-detail'>\n            <b>\n              FullStack Dev Intern <br />\n              Kathmandu, Nepal\n            </b>\n            <br />\n            <br />\n            Documented API spec for new payment services and implemented the\n            respective routes, testing everything thoroughly.\n          </div>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Experience\n","import uniqid from 'uniqid'\nimport { skills } from '../../portfolio'\nimport './Skills.css'\n\nconst Skills = () => {\n  if (!skills.length) return null\n\n  return (\n    <section className='section skills' id='skills'>\n      <ul className='skills__list'>\n        {skills.map((skill) => (\n          <li key={uniqid()} className='skills__list-item btn btn--plain'>\n            {skill}\n          </li>\n        ))}\n      </ul>\n      <br />\n      <br />\n      <br />\n    </section>\n  )\n}\n\nexport default Skills\n","import { about } from '../../portfolio'\nimport './Current.css'\n\nconst Current = () => {\n  const { name, role, description, resume, social } = about\n  return (\n    <div className='about center'>\n      <p className='current__desc'>\n        My class on{' '}\n        <a\n          href='http://www.cs.cornell.edu/courses/cs4414/2021fa/'\n          className='link link--nav'\n        >\n          Systems programming\n        </a>{' '}\n        has inspired in me a love for distributed systems and cloud computing,\n        and I am thus making my way through{' '}\n        <a href='https://dataintensive.net/' className='link link--nav'>\n          Designing Data Intensive Applications\n        </a>{' '}\n        by Martin Kleppman, and enjoying it immensely.\n        <br />\n        <br />\n        I am also following the Distributed Systems course from MIT and\n        attempting to build my own persistent, fault-tolerant, performant NoSQL\n        database using Go.\n        <br />\n        <br />\n        Some modern databases like{' '}\n        <a\n          href='https://github.com/cockroachdb/cockroach'\n          className='link link--nav'\n        >\n          cockroachdb\n        </a>{' '}\n        have piqued my interest, I hope to contribute to it once I have the\n        adequate background. <br />\n        <br />\n      </p>\n    </div>\n  )\n}\n\nexport default Current\n","import { useState, useContext } from 'react'\nimport { ThemeContext } from './contexts/theme'\nimport Header from './components/Header/Header'\nimport Navbar from './components/Navbar/Navbar'\nimport About from './components/About/About'\nimport Projects from './components/Projects/Projects'\nimport Experience from './components/Experience/Experience'\nimport Skills from './components/Skills/Skills'\nimport ScrollToTop from './components/ScrollToTop/ScrollToTop'\nimport Contact from './components/Contact/Contact'\nimport Current from './components/Current/Current'\n\nimport Footer from './components/Footer/Footer'\nimport './App.css'\n\nconst App = () => {\n  const [{ themeName }] = useContext(ThemeContext)\n  const [state, setState] = useState('contact')\n\n  return (\n    <div id='top' className={`${themeName} app`}>\n      <main>\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <About />\n        <br />\n        <br />\n        <br />\n\n        {state === 'skills' ? (\n          <a\n            href='#.'\n            onClick={() => setState('skills')}\n            className='link link--nav--pressed'\n          >\n            Skills\n          </a>\n        ) : (\n          <a\n            href='#.'\n            onClick={() => setState('skills')}\n            className='link link--nav'\n          >\n            Skills\n          </a>\n        )}\n        {'       |       '}\n\n        {state === 'experience' ? (\n          <a\n            href='#.'\n            onClick={() => setState('experience')}\n            className='link link--nav--pressed'\n          >\n            Experience\n          </a>\n        ) : (\n          <a\n            href='#.'\n            onClick={() => setState('experience')}\n            className='link link--nav'\n          >\n            Experience\n          </a>\n        )}\n        {'       |       '}\n\n        {state === 'projects' ? (\n          <a\n            href='#a'\n            onClick={() => setState('projects')}\n            className='link link--nav--pressed'\n          >\n            Projects\n          </a>\n        ) : (\n          <a\n            href='#a'\n            onClick={() => setState('projects')}\n            className='link link--nav'\n          >\n            Projects\n          </a>\n        )}\n        {'       |       '}\n\n        {state === 'current' ? (\n          <a\n            href='#a'\n            onClick={() => setState('current')}\n            className='link link--nav--pressed'\n          >\n            Current\n          </a>\n        ) : (\n          <a\n            href='#a'\n            onClick={() => setState('current')}\n            className='link link--nav'\n          >\n            Current\n          </a>\n        )}\n\n        {state === 'skills' && <Skills />}\n        {state === 'experience' && <Experience />}\n        {state === 'projects' && <Projects />}\n        {state === 'current' && <Current />}\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n      </main>\n    </div>\n  )\n}\n\nexport default App\n","import { render } from 'react-dom'\nimport App from './App'\nimport { ThemeProvider } from './contexts/theme'\nimport './index.css'\n\nrender(\n  <ThemeProvider>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}